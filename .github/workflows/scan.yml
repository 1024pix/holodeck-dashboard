on:
  workflow_dispatch:
#  schedule:
#    - cron: "0 6 */7 * *"
name: Scans
jobs:
  init:
    runs-on: ubuntu-latest
    name: Prepare
    outputs:
      urls: ${{ steps.parse-urls.outputs.urls }}
      urls_json: ${{ steps.parse-urls.outputs.urls_json }}

    steps:
      - uses: actions/checkout@v2

      - name: "Parse urls for matrix"
        id: "parse-urls"
        shell: bash
        run: |
          #jq --version
          #yq --version
          URLS=$(cat urls.txt | grep -e "^http")

          URLS="${URLS//'%'/'%25'}"
          URLS="${URLS//$'\n'/'%0A'}"
          URLS="${URLS//$'\r'/'%0D'}"

          URLS_JSON=$(cat urls.txt | grep -e "^http" | jq -Rsc 'split("\n") [0:-1]' -)
          echo $URLS

          echo "::set-output name=urls_json::$URLS_JSON"
          echo "::set-output name=urls::$URLS"


  scans:
    runs-on: ubuntu-latest
    name: Scans
    needs: init
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        url: ${{fromJson(needs.init.outputs.urls_json)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install packages
        run: |
          mkdir -p scans || true
          yarn

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.4.0
        with:
         # token: "${{ secrets.GITHUB_TOKEN }}"
          docker_name: "owasp/zap2docker-stable"
          target: "${{ matrix.url }}"
          cmd_options: "-a"

      - name: Lighthouse scan
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: "${{ matrix.url }}"
          uploadArtifacts: true
          temporaryPublicStorage: false

      - name: SSL Labs scan
        shell: bash
        run: |
          SCAN_OUTPUT=scans/ssl.json
          node src/ssl/scan.js ${{ matrix.url }} > $SCAN_OUTPUT

      - name: Mozilla HTTP scan
        shell: bash
        run: |
          SCAN_OUTPUT=scans/http.json
          node src/http/scan.js ${{ matrix.url }} > $SCAN_OUTPUT

      - name: Third parties scan
        shell: bash
        run: |
          SCAN_OUTPUT=scans/thirdparties.json
          node src/thirdparties/scan.js ${{ matrix.url }} > $SCAN_OUTPUT

      - name: Nuclei scan
        uses: "./.github/actions/nuclei"
        with:
          urls: "urls.txt"
          output: "scans/nuclei.log"

      - uses: actions/upload-artifact@v2
        with:
          name: scans
          path: scans

      - name: Download lighthouse
        uses: actions/download-artifact@v2
        with:
          name: lighthouse-results
          path: lighthouse-results

      - name: Save results
        run: |

          URL_BASE64=$(printf "%s" "${{Â matrix.url }}" | base64)

          NOW=$(date +"%Y%m%d_%H%M%S")

          OUT_PATH="./results/${URL_BASE64}/${NOW}"

          mkdir -p $OUT_PATH || true

          cat scans/nuclei.log | jq -s > scans/nuclei.json
          rm scans/nuclei.log

          mv scans/* $OUT_PATH/
          mv lighthouse-results/* $OUT_PATH/
          mv report_json.json $OUT_PATH/zap.json
          mv report_md.md $OUT_PATH/zap.md
          mv report_html.html $OUT_PATH/zap.html
 
      - uses: EndBug/add-and-commit@v7
        with:
          add: '["results"]'
         # author_name: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          #author_email: ${{ secrets.SOCIALGROOVYBOT_EMAIL }}
          message: "update: ${{ matrix.url }}"
#          pull_strategy: "--no-ff"

