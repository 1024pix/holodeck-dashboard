{"version":3,"sources":["utils.ts","components/Sidebar.tsx","components/Topbar.tsx","components/Grade.tsx","components/Dashboard.tsx","components/Panel.tsx","components/GeoIP.tsx","components/HTTP.tsx","components/Gauge.tsx","components/LightHouse.tsx","components/Nuclei.tsx","components/Owasp.tsx","components/SSL.tsx","components/Trackers.tsx","components/Url.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","Sidebar","urls","Nav","className","to","activeClassName","exact","size","style","marginTop","marginRight","map","whiteSpace","Topbar","Navbar","variant","bg","sticky","expand","height","fontSize","color","Grade","grade","label","small","newGrade","substring","toUpperCase","Badge","undefined","scoreToGrade","score","x1","x2","grades","split","Math","min","length","floor","IconUnknown","Dashboard","report","console","log","Alert","Table","striped","bordered","hover","Object","keys","key","count","events","lhrCategories","lhr","categories","a11y","accessibility","webPerf","performance","seo","ssl","endpoints","http","owaspAlerts","owasp","site","flatMap","alerts","filter","a","riskcode","owaspCount","owaspGrade","maxSeverity","max","o","parseInt","getOwaspGrade","trackersCount","trackers","trackersGrade","cookiesCount","cookies","cookiesGrade","getGradeCookies","nucleiCount","nuclei","nucleiGrade","n","info","severity","toFixed","href","target","rel","Panel","title","children","Card","Title","background","padding","fontWeight","marginLeft","float","Body","GeoIP","data","marginBottom","row","i","result","host","j","Flag","geoip","country","Flags","iso_code","width","names","fr","hostname","ip","city","HttpRowBadge","abs","score_modifier","HTTP","failures","details","pass","sort","b","failure","name","score_description","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","set","value","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","strokeColor","generateGradient","highDpiSupport","LightHouse","filename","Row","category","Col","xs","md","lg","NucleiBadge","nucleiSeverities","nucleiOrder","indexOf","Nuclei","rows","templateID","matcher_name","orderBySeverity","order","confidence","OwaspBadge","riskdesc","Owasp","alert","SSL","endpoint","statusMessage","hasWarnings","ipAddress","Trackers","colSpan","cookie","domain","httpOnly","secure","tracker","type","Url","useParams","urlData","Jumbotron","paddingTop","App","basename","process","Container","fluid","role","path","ReactDOM","document","getElementById"],"mappings":"ywy9mBAAaA,EAAW,SAACC,GAAD,OACtBA,EACGC,cACAC,QAAQ,uBAAwB,IAChCA,QAAQ,MAAO,K,OCQPC,EAAkC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChD,OACE,cAACC,EAAA,EAAD,CAAKC,UAAU,yDAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,kBAAd,SACE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CACEC,GAAG,IACHD,UAAU,WACVE,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CAAMC,KAAM,GAAIC,MAAO,CAAEC,WAAY,EAAGC,YAAa,KANvD,yBAYJ,oBAAIP,UAAU,8FAAd,SACE,0CAGF,oBAAIA,UAAU,kBAAd,SACGF,EAAKU,KAAI,SAACd,GAAD,OACR,oBACEM,UAAU,WAEVK,MAAO,CACLI,WAAY,OAJhB,SAOE,eAAC,IAAD,CACET,UAAU,WACVC,GAAE,eAAUP,GACZQ,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CAAQC,KAAM,GAAIC,MAAO,CAAEC,WAAY,EAAGC,YAAa,KACtDd,EAASC,OAZPA,c,gBChCNgB,EAAS,kBACpB,cAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,GAAG,OACHC,OAAO,MACPC,OAAO,KACPf,UAAU,4BALZ,SAOE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,sBACED,UAAU,OACVK,MAAO,CAAEW,OAAQ,GAAIC,SAAU,SAAUC,MAAO,gBAFlD,UAIE,cAAC,IAAD,CAAOd,KAAM,GAAIC,MAAO,CAAEC,WAAY,EAAGC,YAAa,MAJxD,2B,gDCTOY,EAA8B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACpDC,EAAWH,EAAMI,UAAU,EAAG,GAAGC,cACjCb,EACS,MAAbW,GAEiB,MAAbA,EADA,SAGa,MAAbA,EACA,UACa,MAAbA,GAEa,MAAbA,EADA,OAGa,MAAbA,EACA,UACA,SACN,OACE,cAACG,EAAA,EAAD,CAAOd,QAASA,EAASP,MAAO,CAAEY,SAAUK,EAAQ,QAAU,OAA9D,cACaK,IAAVN,EAAsBA,EAAQD,KCT/BQ,EAAe,SAACC,GACpB,IAJ4BC,EAAwBC,EAI9CC,EAAS,cAAcC,MAAM,KAOnC,OAAOD,EALUE,KAAKC,IACpBH,EAAOI,OAAS,EAChBF,KAAKG,OAAYR,GARSC,EAQF,KAAS,GARiBC,EAQpB,KAAH,EAPMD,GAAMC,MAarCO,EAAc,kBAAM,cAAC,IAAD,CAAOlC,KAAM,MA4C1BmC,EAAsC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGpD,OAFAC,QAAQC,IAAI,SAAUF,GAGpB,gCACE,uBACA,eAACG,EAAA,EAAD,CAAO/B,QAAQ,OAAf,wEAC2D,IACzD,cAAC,IAAD,CAAcR,KAAM,KAFtB,8CAIA,uBACA,eAACwC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,qCACA,oBAAI/C,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,sBACA,oBAAIA,UAAU,cAAd,qBACA,oBAAIA,UAAU,cAAd,yBAGJ,gCACGgD,OAAOC,KAAKT,GAAQhC,KAAI,SAAC0C,GAIxB,IAzEcC,EAgBFC,EAyDNC,EACJb,EAAOU,GAAKI,IAAIlB,QAAUI,EAAOU,GAAKI,IAAI,GAAGC,WACzCC,EACJH,GAAkBA,EAAcI,cAAc5B,MAC1C6B,EACJL,GAAkBA,EAAcM,YAAY9B,MACxC+B,EAAMP,GAAkBA,EAAcO,IAAI/B,MAG1CgC,EACJrB,EAAOU,GAAKW,IAAIzB,QAChBI,EAAOU,GAAKW,IAAI,GAAGC,WACnBtB,EAAOU,GAAKW,IAAI,GAAGC,UAAU1B,QAC7BI,EAAOU,GAAKW,IAAI,GAAGC,UAAU,GAAG1C,MAG5B2C,EAAOvB,EAAOU,GAAKa,KAAK3B,QAAUI,EAAOU,GAAKa,KAAK,GAAG3C,MAGtD4C,EACHxB,EAAOU,GAAKe,MAAM7B,QACjBI,EAAOU,GAAKe,MAAM,GAAGC,KAAKC,SAAQ,SAACD,GAAD,OAChCA,EAAKE,OAAOC,QAAO,SAACC,GAAD,MAA2B,MAAfA,EAAEC,gBAErC,GACIC,EAAahC,EAAOU,GAAKe,MAAM7B,QAAU4B,EAAY5B,OACrDqC,EAzEI,SAACT,GACrB,IAAMU,EAAcxC,KAAKyC,IAAL,MAAAzC,KAAI,YACnB8B,EAAYxD,KAAI,SAACoE,GAAD,OAAYC,SAASD,EAAEL,WAAa,OAGzD,OAAOG,EAAc,EACjB,IACAA,EAAc,EACd,IACAA,EAAc,EACd,IACAA,EAAc,EACd,IACA,IA4DyBI,CAAcd,GAG3Be,EACHvC,EAAOU,GAAK8B,UACXxC,EAAOU,GAAK8B,SAAS5C,QACrBI,EAAOU,GAAK8B,SAAS,GAAGA,SAAS5C,QACnC,EACI6C,GA3GQ9B,EA2GyB4B,GA1GlC,GAAK,IAAM5B,EAAQ,EAAI,IAAMA,EAAQ,EAAI,IAAM,IA6G9C+B,EACH1C,EAAOU,GAAK8B,UACXxC,EAAOU,GAAK8B,SAAS5C,QACrBI,EAAOU,GAAK8B,SAAS,GAAGG,QAAQ/C,QAClC,EACIgD,EA/GM,SAACjC,GACvB,OAAOA,EAAQ,GACX,IACAA,EAAQ,EACR,IACAA,EAAQ,EACR,IACAA,EAAQ,EACR,IACA,IAsG2BkC,CAAgBH,GAG/BI,EAAc9C,EAAOU,GAAKqC,OAAOnD,OACjCoD,GAvGMpC,EAuGuBZ,EAAOU,GAAKqC,QAtG3ClB,QACZ,SAACoB,GAAD,MAAgC,aAApBA,EAAEC,KAAKC,UAA+C,SAApBF,EAAEC,KAAKC,YACrDvD,OACE,IACAgB,EAAOhB,OACP,IACA,IAkGM,OACE,+BACE,6BACE,cAAC,IAAD,CAAMnC,GAAE,eAAUiD,GAAlB,SAA0BzD,EAASyD,OAErC,oBAAIlD,UAAU,cAAd,SACGqD,EACC,cAAC,EAAD,CACE/B,OAAK,EACLF,MAAOQ,EAAa,EAAI4B,GACxBnC,OAAe,IAAPmC,GAAYoC,UAAY,OAGlC,cAAC,EAAD,MAGJ,oBAAI5F,UAAU,cAAd,SACGqD,EACC,cAAC,EAAD,CACE/B,OAAK,EACLF,MAAOQ,EAAa,EAAI8B,GACxBrC,OAAkB,IAAVqC,GAAekC,UAAY,OAGrC,cAAC,EAAD,MAGJ,oBAAI5F,UAAU,cAAd,SACGqD,EACC,cAAC,EAAD,CACE/B,OAAK,EACLF,MAAOQ,EAAa,EAAIgC,GACxBvC,OAAc,IAANuC,GAAWgC,UAAY,OAGjC,cAAC,EAAD,MAGJ,oBAAI5F,UAAU,cAAd,SACG6D,EAAM,cAAC,EAAD,CAAOvC,OAAK,EAACF,MAAOyC,IAAU,cAAC,EAAD,MAEvC,oBAAI7D,UAAU,cAAd,SACG+D,EAAO,cAAC,EAAD,CAAOzC,OAAK,EAACF,MAAO2C,IAAW,cAAC,EAAD,MAEzC,oBAAI/D,UAAU,cAAd,SACGwE,EACC,cAAC,EAAD,CAAOlD,OAAK,EAACF,MAAOqD,EAAYpD,MAAOmD,IAEvC,cAAC,EAAD,MAGJ,oBAAIxE,UAAU,cAAd,SACE,cAAC,EAAD,CAAOsB,OAAK,EAACF,MAAO6D,EAAe5D,MAAO0D,MAE5C,oBAAI/E,UAAU,cAAd,SACE,cAAC,EAAD,CAAOsB,OAAK,EAACF,MAAOgE,EAAc/D,MAAO6D,MAE3C,oBAAIlF,UAAU,cAAd,SACE,cAAC,EAAD,CAAOsB,OAAK,EAACF,MAAOoE,EAAanE,MAAOiE,QAzDnCpC,WAgEjB,uBACA,uBACA,6CACA,6GAIA,eAACN,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,4CAGJ,kCACE,+BACE,6BACE,mBACE8C,KAAK,qDACLC,OAAO,SACPC,IAAI,sBAHN,iCAQF,2FAEF,+BACE,6BACE,mBACEF,KAAK,2BACLC,OAAO,SACPC,IAAI,sBAHN,wBAQF,iHAKF,+BACE,6BACE,mBACEF,KAAK,2BACLC,OAAO,SACPC,IAAI,sBAHN,uBAQF,uEAEF,+BACE,6BACE,mBACEF,KAAK,mCACLC,OAAO,SACPC,IAAI,sBAHN,wCAQF,2EAEF,+BACE,0CACA,+EAEF,+BACE,6BACE,mBACEF,KAAK,sCACLC,OAAO,SACPC,IAAI,sBAHN,sBAQF,kEAEF,+BACE,6BACE,mBACEF,KAAK,0BACLC,OAAO,SACPC,IAAI,sBAHN,qBAQF,uF,gCCtSCC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUR,EAApB,EAAoBA,KAAMhG,EAA1B,EAA0BA,IAA1B,OACzC,eAACyG,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAY/F,MAAO,CAAEgG,WAAY,UAAWnF,MAAO,QAASoF,QAAS,IAArE,UACGL,EACAP,GACC,sBACErF,MAAO,CAAEkG,WAAY,SAAUtF,SAAU,QAASuF,WAAY,IADhE,SAGGd,IAGJhG,GACC,mBACEW,MAAO,CAAEa,MAAO,QAASuF,MAAO,SAChCZ,KAAMnG,EACNoG,OAAO,SACPC,IAAI,sBAJN,SAME,cAAC,IAAD,SAIN,cAACI,EAAA,EAAKO,KAAN,UAAYR,QC1BHS,EAA8B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5C,OACGA,EAAKxE,QACJ,cAAC,EAAD,CAAO6D,MAAM,QAAQP,KAAK,gDAA1B,SACE,eAAC9C,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC1C,MAAO,CAAEwG,aAAc,IAArD,UACE,gCACE,+BACE,sCACA,0CACA,oCACA,sCACA,8CAGJ,gCACGD,EAAKzC,SACJ,SAAC2C,EAAUC,GAAX,OACED,EAAIE,QACJF,EAAIE,OAAOxG,KAAI,SAACyG,EAAWC,GACzB,IAAMC,EACHF,EAAKG,MAAMC,SACVC,IAAML,EAAKG,MAAMC,QAAQE,WAC3B,KACF,OACE,+BACE,oBAAIvH,UAAU,cAAd,SACGmH,GACC,cAACA,EAAD,CACE9G,MAAO,CAAEmH,MAAO,IAChBvB,MAAOgB,EAAKG,MAAMC,QAAQI,MAAMC,OAItC,6BAAKT,EAAKU,WACV,6BAAKV,EAAKW,KACV,6BACIX,EAAKG,MAAMS,MAAQZ,EAAKG,MAAMS,KAAKJ,MAAMC,IAAO,MAGpD,6BACIT,EAAKG,MAAMC,SAAWJ,EAAKG,MAAMC,QAAQI,MAAMC,IAC/C,QAjBGT,EAAKU,SAAW,IAAMZ,EAAI,IAAMG,iBA2BzD,M,QClDEY,EAAe,SAAChB,GACpB,IAAMnB,EAAWzD,KAAK6F,IAAIjB,EAAIkB,gBACxBpH,EACJ+E,EAAW,IAEPA,EAAW,GADX,SAGAA,EAAW,GACX,UACAA,EAAW,GACX,OACA,UACN,OACE,cAACjE,EAAA,EAAD,CAAO1B,UAAU,QAAQY,QAASA,EAAlC,SACG+E,KAKMsC,EAA4B,SAAC,GAAc,IAAZrB,EAAW,EAAXA,KACpClH,EACHkH,EAAKxE,QAAL,kDAA0DwE,EAAK,GAAGlH,MACnE,KACF,OACEA,GACE,cAAC,EAAD,CACEuG,MAAM,OACNP,KAAK,6DACLhG,IAAKA,EAHP,SAKGkH,EAAKpG,KAAI,SAACsG,EAAUC,GACnB,IAAMmB,EAAWlF,OAAOC,KAAK6D,EAAIqB,SAC9B9D,QAAO,SAACnB,GAAD,OAAU4D,EAAIqB,QAAQjF,GAAKkF,QAClC5H,KAAI,SAAC0C,GAAD,OAAS4D,EAAIqB,QAAQjF,MAE5B,OADAgF,EAASG,MAAK,SAAC/D,EAAGgE,GAAJ,OAAUhE,EAAE0D,eAAiBM,EAAEN,kBAE3C,gCACE,cAAC,EAAD,CAAO5G,MAAO0F,EAAI1F,QAClB,uBACA,uBACA,eAACwB,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oCACA,wCACA,kDAGJ,gCACGmF,EAAS1H,KAAI,SAAC+H,EAASxB,GAAV,OACZ,+BACE,6BAAKwB,EAAQC,OACb,6BACE,cAAC,EAAD,eAAkBD,MAEpB,6BAAKA,EAAQE,sBALNF,EAAQC,KAAOzB,aAdtBD,EAAIpH,IAAMqH,S,gBCtBnB2B,EAA8B,SAACC,GAC1C,IAAMC,EAASC,mBACTC,EAAOD,mBACPE,EAAQF,mBAEdG,qBAAU,WACRD,EAAME,QAAUN,EAAMO,MAClB,IAAIC,QAAMP,EAAOK,SACjB,IAAIG,QAAYR,EAAOK,SAC3BF,EAAME,QAAQI,aAAaP,EAAKG,SAChCF,EAAME,QAAQK,WAAWX,EAAMY,SAC/BR,EAAME,QAAQO,SAAWb,EAAMa,SAC/BT,EAAME,QAAQQ,YAAYd,EAAMe,UAChCX,EAAME,QAAQU,eAAiBhB,EAAMgB,eACrCZ,EAAME,QAAQW,IAAIjB,EAAMkB,SACvB,CAAClB,EAAMO,QAEVF,qBAAU,WACRD,EAAME,QAAQK,WAAWX,EAAMY,WAC9B,CAACZ,EAAMY,UAEVP,qBAAU,WACRD,EAAME,QAAQO,SAAWb,EAAMa,WAC9B,CAACb,EAAMa,WAEVR,qBAAU,WACRD,EAAME,QAAQQ,YAAYd,EAAMe,YAC/B,CAACf,EAAMe,WAEVV,qBAAU,WACRD,EAAME,QAAQU,eAAiBhB,EAAMgB,iBACpC,CAAChB,EAAMgB,iBAEVX,qBAAU,WACRD,EAAME,QAAQW,IAAIjB,EAAMkB,SACvB,CAAClB,EAAMkB,QAYNlB,EARFa,SAQEb,EAPFe,SAOEf,EANFgB,eAMEhB,EALFY,QAKEZ,EAJFO,MAIEP,EAHFkB,MAGElB,EAFFmB,kBA7CkD,IA8C/CC,EA9C+C,YA+ChDpB,EA/CgD,wFAkDpD,OACE,qCACE,oCACEqB,IAAKpB,EACL5I,UAAU,gBACN+J,IAEN,sBAAMC,IAAKlB,EAAMzI,MAAO,CAAE4J,QAAS,cAKzCvB,EAAMwB,aAAe,CACnBV,SAAU,IACVE,SAAU,EACVC,eAAgB,GAChBJ,QAAS,CAOPY,cAAe,CACb,CAAC,EAAK,WACN,CAAC,GAAK,WACN,CAAC,GAAK,WAIN,CAAC,EAAG,YAENC,MAAO,IACPC,UAAW,IACXC,YAAa,EACbC,QAAS,CACPnI,OAAQ,GACRoI,YAAa,KACbtJ,MAAO,QAMTuJ,YAAa,UACbC,kBAAkB,EAClBC,gBAAgB,GAElBzB,OAAO,EACPY,kBAAmB,cAGNpB,IC/GFkC,EAAwC,SAAC,GAAc,IAAZhE,EAAW,EAAXA,KAChDlH,EACHkH,EAAKxE,QAAL,iCAC2BwE,EAAK,GAAGiE,SAASjL,QACzC,UACA,WAEJ,KAEF,OACEF,GACE,cAAC,EAAD,CACEuG,MAAM,aACNP,KAAK,2DACLhG,IAAKA,EAHP,SAKGkH,EAAKpG,KAAI,SAACsG,EAAUC,GAOnB,OACE,cAAC+D,EAAA,EAAD,UAPY,CACZ,gBACA,cACA,MACA,kBAIStK,KAAI,SAAC0C,EAAU6D,GACpB,IAAMgE,EAAWjE,EAAIvD,WAAWL,GAChC,OACE,cAAC8H,EAAA,EAAD,CAEEC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJnL,UAAU,mBALZ,SAOE,eAACmG,EAAA,EAAD,WACE,cAAC,EAAD,CACEqB,MAAO,IACPxG,OAAQ,GACR6I,MAAwB,IAAjBkB,EAASlJ,MAChB6H,SAAU,EACVF,SAAU,IACVG,eAAgB,KAElB,eAACxD,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKC,MAAN,UAAa2E,EAAS9E,QACtB,cAACE,EAAA,EAAKC,MAAN,CACE/F,MAAO,CAAEY,SAAU,OAAQsF,WAAY,QADzC,UAGqB,IAAjBwE,EAASlJ,OAAa+D,UAAY,aApBrCmF,EAAS9E,MAAQc,OALpBD,EAAIpH,IAAMqH,SC9B1BqE,EAAc,SAACtE,GACnB,IAAMnB,EAAYmB,EAAIpB,MAAQoB,EAAIpB,KAAKC,UAAa,WAC9C/E,EACS,aAAb+E,GAEiB,SAAbA,EADA,SAGa,WAAbA,EACA,UACa,QAAbA,EACA,OACA,UACN,OACE,cAACjE,EAAA,EAAD,CAAO1B,UAAU,QAAQY,QAASA,EAAlC,SACG+E,KAKD0F,EAAmB,gCAAgCpJ,MAAM,KAEzDqJ,EAAc,SAAChH,EAAQgE,GAC3B,OACE+C,EAAiBE,QAAQjH,EAAEoB,KAAKC,UAChC0F,EAAiBE,QAAQjD,EAAE5C,KAAKC,WAIvB6F,EAAgC,SAAC,GAAc,IACpDC,EADmD,EAAX7E,KAG9C,OADA6E,EAAKpD,KAAKiD,GAEPG,EAAKrJ,QACJ,cAAC,EAAD,CACE6D,MAAM,SACNP,KAAK,kEAFP,SAIE,eAAC9C,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oCACA,0CACA,sCACA,8CAGJ,gCACG0I,EAAKjL,KAAI,SAAC+H,EAAcxB,GACvB,OACE,+BACE,6BAAKwB,EAAQmD,aACb,6BACE,cAAC,EAAD,eAAiBnD,MAEnB,6BAAKA,EAAQ7C,KAAK8C,OAClB,6BAAKD,EAAQoD,iBANNpD,EAAQmD,WAAa3E,cAc1C,MCjEE6E,EAAkB,SAACtH,EAAQgE,GAE/B,IAAMuD,EAAQhH,SAASyD,EAAE/D,UAAYM,SAASP,EAAEC,UAChD,OAAc,IAAVsH,EAEKhH,SAASyD,EAAEwD,YAAcjH,SAASP,EAAEwH,YAEtCD,GAGHE,EAAa,SAACjF,GAClB,IAAMnB,EAAWmB,EAAIvC,SACf3D,EACS,MAAb+E,EACI,OACa,MAAbA,EACA,UACa,MAAbA,GAEa,MAAbA,EADA,SAGA,OACN,OACE,cAACjE,EAAA,EAAD,CAAO1B,UAAU,QAAQY,QAASA,EAAlC,SACGkG,EAAIkF,YAOEC,EAA8B,SAAC,GAAc,IAAZrF,EAAW,EAAXA,KACtCxC,EAASwC,EAAKzC,SAAQ,SAAC2C,GAC3B,OAAOA,GAAOA,EAAI5C,KAAKC,SAAQ,SAACD,GAAD,OAAeA,EAAKE,aAErDA,EAAOiE,KAAKuD,GACZ,IAAMlM,EACJkH,EAAKxE,QAAL,iCAC0BwE,EAAK,GAAGiE,SAASjL,QAAQ,UAAW,UAChE,OACGwE,EAAOhC,QACN,cAAC,EAAD,CACE6D,MAAM,QACNvG,IAAKA,EACLgG,KAAK,6CAHP,SAKE,eAAC9C,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,oBAAI/C,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,kCAGJ,gCACGoE,EAAO5D,KAAI,SAAC0L,EAAYnF,GACvB,OACE,+BACE,6BAAKmF,EAAM1D,OACX,oBAAIxI,UAAU,cAAd,SAA6BkM,EAAM/I,QACnC,oBAAInD,UAAU,cAAd,SACE,cAAC,EAAD,eAAgBkM,QAJXA,EAAM1D,KAAOzB,cAalC,MCnESoF,EAA0B,SAAC,GAAc,IAAZvF,EAAW,EAAXA,KAClClH,EACHkH,EAAKxE,QACJwE,EAAK,GAAG9C,WADT,yDAEmD8C,EAAK,GAAGK,OAC5D,KACF,OACEvH,GACE,cAAC,EAAD,CAAOuG,MAAM,MAAMP,KAAK,yCAAsChG,IAAKA,EAAnE,SACGkH,EAAKpG,KAAI,SAACsG,EAAUC,GACnB,OACE,cAAC,WAAD,UACE,cAAC+D,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,UACGlE,EAAIhD,UAAUtD,KAAI,SAAC4L,EAAerF,GACjC,OACE,gCACGqF,EAASnF,KACV,6BAC+B,UAA3BmF,EAASC,eACT,gCACE,cAAC,EAAD,CAAOjL,MAAOgL,EAAShL,QACvB,uBACA,uBACCgL,EAASE,aACR,2DAEF,uBAPF,OAQOF,EAASG,cAGhB,cAAC5J,EAAA,EAAD,CAAO/B,QAAQ,SAAf,SACGwL,EAASC,oBAhBRD,EAASnF,KAAOF,WALfD,EAAIpH,IAAMqH,SCZ9ByF,EAAoC,SAAC,GAAc,IAAZ5F,EAAW,EAAXA,KAGlD,OADEA,EAAKzC,SAAQ,SAAC2C,GAAD,4BAAkBA,EAAI3B,SAAtB,YAAkC2B,EAAI9B,cAAW5C,OAAS,GAGrE,cAAC,EAAD,CAAO6D,MAAM,WAAWP,KAAK,8CAA7B,SACGkB,EAAKpG,KAAI,SAACsG,EAAUC,GACnB,OACE,gCACID,EAAI3B,SAAW2B,EAAI3B,QAAQ/C,QAC3B,eAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAC1C,MAAO,CAAEwG,aAAc,IAArD,UACE,kCACE,6BACE,oBAAI7G,UAAU,qBAAqByM,QAAS,EAA5C,uBAIF,+BACE,sCACA,wCACA,oBAAIzM,UAAU,cAAd,sBACA,oBAAIA,UAAU,cAAd,0BAGJ,gCACG8G,EAAI3B,QAAQ3E,KAAI,SAACkM,EAAa3F,GAC7B,OACE,+BACE,6BAAK2F,EAAOlE,OACZ,6BAAKkE,EAAOC,SACZ,oBAAI3M,UAAU,cAAd,SACG0M,EAAOE,SAAW,eAAO,WAE5B,oBAAI5M,UAAU,cAAd,SACG0M,EAAOG,OAAS,eAAO,aAPnBH,EAAOhB,WAAa,GAAK3E,YAe1C,KACAD,EAAI9B,UAAY8B,EAAI9B,SAAS5C,QAC7B,eAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,kCACE,6BACE,oBAAI/C,UAAU,qBAAqByM,QAAS,EAA5C,wCAIF,+BACE,sCACA,6CAGJ,gCACG3F,EAAI9B,SAASxE,KAAI,SAACsM,EAAc/F,GAC/B,OACE,+BACE,6BAAK+F,EAAQC,OACb,6BAAKD,EAAQjD,UAFNiD,EAAQjD,MAAQ9C,YASjC,OA5DMD,EAAIpH,IAAMqH,SAkE1B,cAAC,EAAD,CAAOd,MAAM,WAAWP,KAAK,8CAA7B,SACE,cAAC/C,EAAA,EAAD,CAAO/B,QAAQ,UAAf,oDC9DKoM,EAAgC,SAAC,GAA0B,IAAxBxK,EAAuB,EAAvBA,OAExC9C,GAF+D,0BACtDuN,cACI,IACbC,EAAU1K,EAAO9C,GACvB,OACE,gCACE,cAACyN,EAAA,EAAD,CACE9M,MAAO,CAAEW,OAAQ,GAAIV,UAAW,GAAI8M,WAAY,GAAIvG,aAAc,IADpE,SAGE,oBAAI7G,UAAU,cAAd,SACE,mBAAG6F,KAAMnG,EAAKqG,IAAI,sBAAsBD,OAAO,SAA/C,SACGpG,QAIP,cAAC,EAAD,CAAYkH,KAAMsG,EAAQ5J,MAC1B,uBACA,cAAC,EAAD,CAAKsD,KAAMsG,EAAQrJ,MACnB,uBACA,cAAC,EAAD,CAAM+C,KAAMsG,EAAQnJ,OACpB,uBACA,cAAC,EAAD,CAAQ6C,KAAMsG,EAAQ3H,SACtB,uBACA,cAAC,EAAD,CAAUqB,KAAMsG,EAAQlI,WACxB,uBACA,cAAC,EAAD,CAAO4B,KAAMsG,EAAQ9F,QACrB,uBACA,cAAC,EAAD,CAAOR,KAAMsG,EAAQjJ,YCTZoJ,EA1BH,WACV,IAAMvN,EAAOkD,OAAOC,KAAKT,GACzB,OACE,cAAC,IAAD,CAAQ8K,SAAUC,kBAAlB,SACE,gCACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAAC3C,EAAA,EAAD,WACE,cAAC,EAAD,CAAShL,KAAMA,IACf,sBAAM4N,KAAK,OAAO1N,UAAU,wCAA5B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2N,KAAK,SAAZ,SACE,cAAC,EAAD,CAAKnL,OAAQA,MAEf,cAAC,IAAD,CAAOmL,KAAK,IAAZ,SACE,cAAC,EAAD,CAAWnL,OAAQA,sBCpBrCoL,SACE,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87c55edb.chunk.js","sourcesContent":["export const smallUrl = (url: string) =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\/(www\\.)?/, \"\")\n    .replace(/\\/$/, \"\");\n\nexport const getHostName = (url: string) =>\n  url\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\")\n    .replace(/^([^/]+)\\/.+$/, \"$1\");\n","import * as React from \"react\";\n\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, Search } from \"react-feather\";\n\nimport { smallUrl } from \"../utils\";\n\ntype SidebarProps = {\n  urls: any[];\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ urls }) => {\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Tableau de bord\n            </NavLink>\n          </li>\n        </ul>\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {urls.map((url) => (\n            <li\n              className=\"nav-item\"\n              key={url}\n              style={{\n                whiteSpace: \"pre\",\n              }}\n            >\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url}`}\n                activeClassName=\"active\"\n                exact={true}\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Cloud } from \"react-feather\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Topbar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n  >\n    <Link to=\"/\">\n      <div\n        className=\"px-3\"\n        style={{ height: 30, fontSize: \"1.3rem\", color: \"var(--white)\" }}\n      >\n        <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n        Météo apps\n      </div>\n    </Link>\n    {/*<FormControl\n      type=\"text\"\n      placeholder=\"Search url\"\n      className=\" form-control-dark w-100\"\n    />*/}\n  </Navbar>\n);\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = { grade: string; label?: string; small?: boolean };\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label, small }) => {\n  const newGrade = grade.substring(0, 1).toUpperCase();\n  const variant =\n    newGrade === \"F\"\n      ? \"danger\"\n      : newGrade === \"E\"\n      ? \"danger\"\n      : newGrade === \"D\"\n      ? \"warning\"\n      : newGrade === \"C\"\n      ? \"info\"\n      : newGrade === \"B\"\n      ? \"info\"\n      : newGrade === \"A\"\n      ? \"success\"\n      : \"danger\";\n  return (\n    <Badge variant={variant} style={{ fontSize: small ? \"1.3em\" : \"2em\" }}>\n      {label !== undefined ? label : grade}\n    </Badge>\n  );\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\nimport { ExternalLink, Slash } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\n\nimport { smallUrl } from \"../utils\";\n\nimport { Grade } from \"./Grade\";\n\ntype DashboardProps = { report: any };\n\nconst remap = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst scoreToGrade = (score: number) => {\n  const grades = \"A,B,C,D,E,F\".split(\",\");\n\n  const newGrade = Math.min(\n    grades.length - 1,\n    Math.floor(remap(score, 0, 1, 0, 6))\n  );\n\n  return grades[newGrade];\n};\n\nconst IconUnknown = () => <Slash size={20} />;\n\nconst getGradeTrackers = (count: number) => {\n  return count > 10 ? \"F\" : count > 2 ? \"C\" : count > 0 ? \"B\" : \"A\";\n};\n\nconst getGradeCookies = (count: number) => {\n  return count > 10\n    ? \"F\"\n    : count > 5\n    ? \"E\"\n    : count > 2\n    ? \"C\"\n    : count > 0\n    ? \"B\"\n    : \"A\";\n};\n\nconst getNucleiGrade = (events: any) => {\n  return events.filter(\n    (n: any) => n.info.severity === \"critical\" || n.info.severity === \"high\"\n  ).length\n    ? \"F\"\n    : events.length\n    ? \"B\"\n    : \"A\";\n};\n\nconst getOwaspGrade = (owaspAlerts: any) => {\n  const maxSeverity = Math.max(\n    ...owaspAlerts.map((o: any) => parseInt(o.riskcode) || 0)\n  );\n\n  return maxSeverity > 3\n    ? \"F\"\n    : maxSeverity > 2\n    ? \"D\"\n    : maxSeverity > 1\n    ? \"C\"\n    : maxSeverity > 0\n    ? \"B\"\n    : \"A\";\n};\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  console.log(\"report\", report);\n\n  return (\n    <div>\n      <br />\n      <Alert variant=\"info\">\n        Cliquez sur une des URLs pour obtenir le détail puis sur{\" \"}\n        <ExternalLink size={16} /> pour accéder au rapport par produit.\n      </Alert>\n      <br />\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>url</th>\n            <th className=\"text-center\">a11y</th>\n            <th className=\"text-center\">perf</th>\n            <th className=\"text-center\">SEO</th>\n            <th className=\"text-center\">SSL</th>\n            <th className=\"text-center\">HTTP</th>\n            <th className=\"text-center\">OWASP</th>\n            <th className=\"text-center\">Trackers</th>\n            <th className=\"text-center\">Cookies</th>\n            <th className=\"text-center\">Nuclei</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(report).map((key) => {\n            // compute values\n\n            // LightHouse\n            const lhrCategories =\n              report[key].lhr.length && report[key].lhr[0].categories;\n            const a11y =\n              lhrCategories && (lhrCategories.accessibility.score as number);\n            const webPerf =\n              lhrCategories && (lhrCategories.performance.score as number);\n            const seo = lhrCategories && (lhrCategories.seo.score as number);\n\n            // SSL\n            const ssl =\n              report[key].ssl.length &&\n              report[key].ssl[0].endpoints &&\n              report[key].ssl[0].endpoints.length &&\n              report[key].ssl[0].endpoints[0].grade;\n\n            // HTTP\n            const http = report[key].http.length && report[key].http[0].grade;\n\n            // OWASP\n            const owaspAlerts =\n              (report[key].owasp.length &&\n                report[key].owasp[0].site.flatMap((site: any) =>\n                  site.alerts.filter((a: any) => a.riskcode !== \"0\")\n                )) ||\n              [];\n            const owaspCount = report[key].owasp.length && owaspAlerts.length;\n            const owaspGrade = getOwaspGrade(owaspAlerts);\n\n            // TRACKERS\n            const trackersCount =\n              (report[key].trackers &&\n                report[key].trackers.length &&\n                report[key].trackers[0].trackers.length) ||\n              0;\n            const trackersGrade = getGradeTrackers(trackersCount);\n\n            // COOKIES\n            const cookiesCount =\n              (report[key].trackers &&\n                report[key].trackers.length &&\n                report[key].trackers[0].cookies.length) ||\n              0;\n            const cookiesGrade = getGradeCookies(cookiesCount);\n\n            // NUCLEI\n            const nucleiCount = report[key].nuclei.length;\n            const nucleiGrade = getNucleiGrade(report[key].nuclei);\n\n            return (\n              <tr key={key}>\n                <td>\n                  <Link to={`/url/${key}`}>{smallUrl(key)}</Link>\n                </td>\n                <td className=\"text-center\">\n                  {lhrCategories ? (\n                    <Grade\n                      small\n                      grade={scoreToGrade(1 - a11y)}\n                      label={(a11y * 100).toFixed() + \" %\"}\n                    />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {lhrCategories ? (\n                    <Grade\n                      small\n                      grade={scoreToGrade(1 - webPerf)}\n                      label={(webPerf * 100).toFixed() + \" %\"}\n                    />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {lhrCategories ? (\n                    <Grade\n                      small\n                      grade={scoreToGrade(1 - seo)}\n                      label={(seo * 100).toFixed() + \" %\"}\n                    />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  {ssl ? <Grade small grade={ssl} /> : <IconUnknown />}\n                </td>\n                <td className=\"text-center\">\n                  {http ? <Grade small grade={http} /> : <IconUnknown />}\n                </td>\n                <td className=\"text-center\">\n                  {owaspCount ? (\n                    <Grade small grade={owaspGrade} label={owaspCount} />\n                  ) : (\n                    <IconUnknown />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  <Grade small grade={trackersGrade} label={trackersCount} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade small grade={cookiesGrade} label={cookiesCount} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade small grade={nucleiGrade} label={nucleiCount} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <br />\n      <br />\n      <h3>Methodology</h3>\n      <p>\n        This dashboard is based on third-parties tools and is generated once a\n        week.\n      </p>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>tool</th>\n            <th>usage</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <a\n                href=\"https://developers.google.com/web/tools/lighthouse\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                Google LightHouse\n              </a>\n            </td>\n            <td>Automated tool for improving the quality of web pages.</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                href=\"https://www.zaproxy.org/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                ZA proxy\n              </a>\n            </td>\n            <td>\n              Run OWASP ZAP Baseline scan to find vulnerabilities in your web\n              application.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                href=\"https://www.ssllabs.com/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                SSLLabs\n              </a>\n            </td>\n            <td>Deep analysis of SSL configuration</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                href=\"https://observatory.mozilla.org/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                Mozilla HTTP observatory\n              </a>\n            </td>\n            <td>Mozilla's web security guidelines scan</td>\n          </tr>\n          <tr>\n            <td>Trackers</td>\n            <td>Extract third-parties requests and cookies</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                href=\"https://nuclei.projectdiscovery.io/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                Nuclei\n              </a>\n            </td>\n            <td>Scan server misconfigurations</td>\n          </tr>\n          <tr>\n            <td>\n              <a\n                href=\"https://www.maxmind.com\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                GeoIP\n              </a>\n            </td>\n            <td>MaxMind GeoIP detection for all requests</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: any;\n  info?: string;\n  url?: string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url }) => (\n  <Card>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","import * as React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Flags from \"country-flag-icons/react/3x2\";\n\nimport { Panel } from \"./Panel\";\n\ntype GeoIPProps = { data: any };\n\nexport const GeoIP: React.FC<GeoIPProps> = ({ data }) => {\n  return (\n    (data.length && (\n      <Panel title=\"GeoIP\" info=\"Géolocalisation des requêtes de la page\">\n        <Table striped bordered hover style={{ marginBottom: 10 }}>\n          <thead>\n            <tr>\n              <th>Flag</th>\n              <th>Hostname</th>\n              <th>IP</th>\n              <th>City</th>\n              <th>Country</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.flatMap(\n              (row: any, i: number) =>\n                row.result &&\n                row.result.map((host: any, j: number) => {\n                  const Flag =\n                    (host.geoip.country &&\n                      Flags[host.geoip.country.iso_code]) ||\n                    null;\n                  return (\n                    <tr key={host.hostname + \"-\" + i + \"-\" + j}>\n                      <td className=\"text-center\">\n                        {Flag && (\n                          <Flag\n                            style={{ width: 60 }}\n                            title={host.geoip.country.names.fr}\n                          />\n                        )}\n                      </td>\n                      <td>{host.hostname}</td>\n                      <td>{host.ip}</td>\n                      <td>\n                        {(host.geoip.city && host.geoip.city.names.fr) || \"?\"}\n                      </td>\n\n                      <td>\n                        {(host.geoip.country && host.geoip.country.names.fr) ||\n                          \"?\"}\n                      </td>\n                    </tr>\n                  );\n                })\n            )}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: any };\n\nconst HttpRowBadge = (row: any) => {\n  const severity = Math.abs(row.score_modifier);\n  const variant =\n    severity > 50\n      ? \"danger\"\n      : severity > 30\n      ? \"danger\"\n      : severity > 20\n      ? \"warning\"\n      : severity > 10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nexport const HTTP: React.FC<HTTPProps> = ({ data }) => {\n  const url =\n    (data.length && `https://observatory.mozilla.org/analyze/${data[0].url}`) ||\n    null;\n  return (\n    url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        {data.map((row: any, i: number) => {\n          const failures = Object.keys(row.details)\n            .filter((key) => !row.details[key].pass)\n            .map((key) => row.details[key]);\n          failures.sort((a, b) => a.score_modifier - b.score_modifier);\n          return (\n            <div key={row.url + i}>\n              <Grade grade={row.grade} />\n              <br />\n              <br />\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>id</th>\n                    <th>impact</th>\n                    <th>description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {failures.map((failure, i) => (\n                    <tr key={failure.name + i}>\n                      <td>{failure.name}</td>\n                      <td>\n                        <HttpRowBadge {...failure} />\n                      </td>\n                      <td>{failure.score_description}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </div>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\n\ntype Category = {\n  score: number;\n  [any: string]: any;\n};\n\ntype LightHouseProps = { data: any };\n\nexport const LightHouse: React.FC<LightHouseProps> = ({ data }) => {\n  const url =\n    (data.length &&\n      `/dnum-dashboard/report/${data[0].filename.replace(\n        /\\.json$/,\n        \".html\"\n      )}`) ||\n    null;\n\n  return (\n    url && (\n      <Panel\n        title=\"LightHouse\"\n        info=\"Informations collectées par l'outil Google LightHouse\"\n        url={url}\n      >\n        {data.map((row: any, i: number) => {\n          const order = [\n            \"accessibility\",\n            \"performance\",\n            \"seo\",\n            \"best-practices\",\n          ];\n          return (\n            <Row key={row.url + i}>\n              {order.map((key: any, i: number) => {\n                const category = row.categories[key] as Category;\n                return (\n                  <Col\n                    key={category.title + i}\n                    xs={12}\n                    md={6}\n                    lg={3}\n                    className=\"text-center mb-3\"\n                  >\n                    <Card>\n                      <Gauge\n                        width={100}\n                        height={60}\n                        value={category.score * 100}\n                        minValue={0}\n                        maxValue={100}\n                        animationSpeed={32}\n                      />\n                      <Card.Body>\n                        <Card.Title>{category.title}</Card.Title>\n                        <Card.Title\n                          style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                        >\n                          {(category.score * 100).toFixed() + \"%\"}\n                        </Card.Title>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                );\n              })}\n            </Row>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\ntype NucleiProps = { data: any };\n\nconst NucleiBadge = (row: any) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n      ? \"danger\"\n      : severity === \"medium\"\n      ? \"warning\"\n      : severity === \"low\"\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: any, b: any) => {\n  return (\n    nucleiSeverities.indexOf(a.info.severity) -\n    nucleiSeverities.indexOf(b.info.severity)\n  );\n};\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    (rows.length && (\n      <Panel\n        title=\"Nuclei\"\n        info=\"Détection d'erreurs de configuration et vulnérabilités\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>severity</th>\n              <th>name</th>\n              <th>matcher</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((failure: any, i: number) => {\n              return (\n                <tr key={failure.templateID + i}>\n                  <td>{failure.templateID}</td>\n                  <td>\n                    <NucleiBadge {...failure} />\n                  </td>\n                  <td>{failure.info.name}</td>\n                  <td>{failure.matcher_name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: any, b: any) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: any) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n      ? \"warning\"\n      : severity === \"2\"\n      ? \"danger\"\n      : severity === \"3\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: any };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data }) => {\n  const alerts = data.flatMap((row: any) => {\n    return row && row.site.flatMap((site: any) => site.alerts);\n  });\n  alerts.sort(orderBySeverity);\n  const url =\n    data.length &&\n    `/dnum-dashboard/report/${data[0].filename.replace(/\\.json$/, \".html\")}`;\n  return (\n    (alerts.length && (\n      <Panel\n        title=\"OWASP\"\n        url={url}\n        info=\"Scan de vulnérabiliés OWASP baseline\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>name</th>\n              <th className=\"text-center\">count</th>\n              <th className=\"text-center\">risk/confidence</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert: any, i: number) => {\n              return (\n                <tr key={alert.name + i}>\n                  <td>{alert.name}</td>\n                  <td className=\"text-center\">{alert.count}</td>\n                  <td className=\"text-center\">\n                    <OwaspBadge {...alert} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype SSLProps = { data: any };\n\nexport const SSL: React.FC<SSLProps> = ({ data }) => {\n  const url =\n    (data.length &&\n      data[0].endpoints &&\n      `https://www.ssllabs.com/ssltest/analyze.html?d=${data[0].host}`) ||\n    null;\n  return (\n    url && (\n      <Panel title=\"SSL\" info=\"Informations collectées via SSLlabs\" url={url}>\n        {data.map((row: any, i: number) => {\n          return (\n            <React.Fragment key={row.url + i}>\n              <Row>\n                <Col>\n                  {row.endpoints.map((endpoint: any, i: number) => {\n                    return (\n                      <div key={endpoint.host + i}>\n                        {endpoint.host}\n                        <h6>\n                          {(endpoint.statusMessage === \"Ready\" && (\n                            <div>\n                              <Grade grade={endpoint.grade} />\n                              <br />\n                              <br />\n                              {endpoint.hasWarnings && (\n                                <div>Certificate has WARNINGS</div>\n                              )}\n                              <br />\n                              IP: {endpoint.ipAddress}\n                            </div>\n                          )) || (\n                            <Alert variant=\"danger\">\n                              {endpoint.statusMessage}\n                            </Alert>\n                          )}\n                        </h6>\n                      </div>\n                    );\n                  })}\n                </Col>\n              </Row>\n            </React.Fragment>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: any };\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const hasIssues =\n    data.flatMap((row: any) => [...row.cookies, ...row.trackers]).length > 0;\n  return (\n    (hasIssues && (\n      <Panel title=\"Trackers\" info=\"Scripts tiers embarqués dans la page web\">\n        {data.map((row: any, i: number) => {\n          return (\n            <div key={row.url + i}>\n              {(row.cookies && row.cookies.length && (\n                <Table striped bordered hover style={{ marginBottom: 10 }}>\n                  <thead>\n                    <tr>\n                      <th className=\"bg-dark text-white\" colSpan={4}>\n                        Cookies\n                      </th>\n                    </tr>\n                    <tr>\n                      <th>name</th>\n                      <th>domain</th>\n                      <th className=\"text-center\">httpOnly</th>\n                      <th className=\"text-center\">secure</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {row.cookies.map((cookie: any, i: number) => {\n                      return (\n                        <tr key={cookie.templateID + \"\" + i}>\n                          <td>{cookie.name}</td>\n                          <td>{cookie.domain}</td>\n                          <td className=\"text-center\">\n                            {cookie.httpOnly ? \"✔️\" : \"❌\"}\n                          </td>\n                          <td className=\"text-center\">\n                            {cookie.secure ? \"✔️\" : \"❌\"}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              )) ||\n                null}\n              {(row.trackers && row.trackers.length && (\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"bg-dark text-white\" colSpan={4}>\n                        Third-parties ressources\n                      </th>\n                    </tr>\n                    <tr>\n                      <th>type</th>\n                      <th>value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {row.trackers.map((tracker: any, i: number) => {\n                      return (\n                        <tr key={tracker.value + i}>\n                          <td>{tracker.type}</td>\n                          <td>{tracker.value}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              )) ||\n                null}\n            </div>\n          );\n        })}\n      </Panel>\n    )) || (\n      <Panel title=\"Trackers\" info=\"Scripts tiers embarqués dans la page web\">\n        <Alert variant=\"success\">Aucun script third-party detecté</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { Jumbotron } from \"react-bootstrap\";\n\nimport { GeoIP } from \"./GeoIP\";\nimport { HTTP } from \"./HTTP\";\nimport { LightHouse } from \"./LightHouse\";\nimport { Nuclei } from \"./Nuclei\";\nimport { Owasp } from \"./Owasp\";\nimport { SSL } from \"./SSL\";\nimport { Trackers } from \"./Trackers\";\n\ntype UrlDetailProps = { report: any };\n\n// for some reason react-router `:url*` didnt work, use `*` only\ninterface ParamTypes {\n  \"0\": string;\n}\n\nexport const Url: React.FC<UrlDetailProps> = ({ report, ...props }) => {\n  const params = useParams<ParamTypes>();\n  const url = params[\"0\"];\n  const urlData = report[url] as any;\n  return (\n    <div>\n      <Jumbotron\n        style={{ height: 50, marginTop: 10, paddingTop: 20, marginBottom: 10 }}\n      >\n        <h3 className=\"text-center\">\n          <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n            {url}\n          </a>\n        </h3>\n      </Jumbotron>\n      <LightHouse data={urlData.lhr} />\n      <br />\n      <SSL data={urlData.ssl} />\n      <br />\n      <HTTP data={urlData.http} />\n      <br />\n      <Nuclei data={urlData.nuclei} />\n      <br />\n      <Trackers data={urlData.trackers} />\n      <br />\n      <GeoIP data={urlData.geoip} />\n      <br />\n      <Owasp data={urlData.owasp} />\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Container, Row } from \"react-bootstrap\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport report from \"./report.json\";\n\nimport { Sidebar } from \"./components/Sidebar\";\nimport { Topbar } from \"./components/Topbar\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Url } from \"./components/Url\";\n\nconst App = () => {\n  const urls = Object.keys(report);\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Topbar />\n        <Container fluid>\n          <Row>\n            <Sidebar urls={urls} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/*\">\n                  <Url report={report} />\n                </Route>\n                <Route path=\"/\">\n                  <Dashboard report={report} />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}